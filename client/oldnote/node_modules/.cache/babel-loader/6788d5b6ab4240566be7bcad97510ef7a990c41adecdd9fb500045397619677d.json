{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\oldnotes\\\\client\\\\oldnote\\\\src\\\\components\\\\notes\\\\FileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUploader({\n  onUpload\n}) {\n  _s();\n  const fileInputRef = useRef(null);\n  const handleFileChange = async () => {\n    const files = e.target.files;\n    const formData = new FormData();\n    Array.from(files).forEach(file => {\n      formData.append('files', file);\n    });\n    try {\n      const respose = await fetch('https://localhost:4000/route/files', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'multiple/form-data'\n        },\n        body: formData\n      });\n      const result = await response.json();\n      const uploadedFiles = result.files.map(file => ({\n        id: file.id,\n        name: file.name,\n        isFolder: false,\n        data: file\n      }));\n      uploadedFiles.forEach(onUpload);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  };\n  const handleFolderChange = async e => {\n    const files = e.target.files;\n    const formData = new FormData();\n    const folderName = \"folder-\" + Date.now();\n    Array.from(files).forEach(file => {\n      formData.append('files', file);\n    });\n    formData.append('folderName', folderName);\n    try {\n      const response = await fetch('http://localhost:4000/route/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n      const uploadedFiles = result.files.map(file => ({\n        id: file.id,\n        name: file.name,\n        isFolder: false,\n        data: file\n      }));\n      const newFolder = {\n        id: folderName,\n        name: folderName,\n        isFolder: true,\n        children: uploadedFiles\n      };\n      onUpload(newFolder);\n    } catch (error) {\n      console.error('Error uploading folder:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleFileChange,\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => fileInputRef.current.click(),\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      webkitdirectory: true,\n      onChange: handleFolderChange,\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fileInputRef.current.click(),\n      children: \"Upload Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","FileUploader","onUpload","_s","fileInputRef","handleFileChange","files","e","target","formData","FormData","Array","from","forEach","file","append","respose","fetch","method","mode","headers","body","result","response","json","uploadedFiles","map","id","name","isFolder","data","error","console","handleFolderChange","folderName","Date","now","ok","Error","newFolder","children","className","type","multiple","onChange","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","current","click","webkitdirectory","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/oldnotes/client/oldnote/src/components/notes/FileUploader.js"],"sourcesContent":["import React, { useRef } from 'react'\r\n\r\nfunction FileUploader({onUpload}) {\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleFileChange = async() =>{\r\n        const files = e.target.files;\r\n        const formData = new FormData();\r\n\r\n        Array.from(files).forEach((file)=>{\r\n            formData.append('files',file)\r\n        })\r\n\r\n        try{\r\n            const respose = await fetch('https://localhost:4000/route/files',{\r\n                method:'POST',\r\n                mode:'cors',\r\n                headers:{\r\n                    'Content-Type':'multiple/form-data'\r\n                },\r\n                body:formData,\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            const uploadedFiles = result.files.map(file=>({\r\n                id:file.id,\r\n                name:file.name,\r\n                isFolder:false,\r\n                data:file,\r\n            }));\r\n\r\n            uploadedFiles.forEach(onUpload);\r\n        }\r\n        catch(error){\r\n            console.error('Error uploading files:', error);\r\n        }\r\n    }\r\n\r\n    const handleFolderChange = async (e) =>{\r\n        const files = e.target.files;\r\n        const formData = new FormData();\r\n        const folderName = \"folder-\"+Date.now();\r\n    \r\n        Array.from(files).forEach((file)=>{\r\n            formData.append('files',file);\r\n        })\r\n\r\n        formData.append('folderName', folderName);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:4000/route/upload', {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n      \r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n      \r\n            const result = await response.json();\r\n      \r\n            const uploadedFiles = result.files.map(file => ({\r\n              id: file.id,\r\n              name: file.name,\r\n              isFolder: false,\r\n              data: file,\r\n            }));\r\n      \r\n            const newFolder = {\r\n              id: folderName,\r\n              name: folderName,\r\n              isFolder: true,\r\n              children: uploadedFiles,\r\n            };\r\n      \r\n            onUpload(newFolder);\r\n          } catch (error) {\r\n            console.error('Error uploading folder:', error);\r\n          }\r\n    }\r\n  return (\r\n    <div className=\"file-uploader\">\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <button onClick={(e) => fileInputRef.current.click()}>Upload File</button>\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        webkitdirectory\r\n        onChange={handleFolderChange}\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <button onClick={() => fileInputRef.current.click()}>Upload Folder</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUploader"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}